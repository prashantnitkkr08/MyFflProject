package com.restCalls.main;

import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;
import org.apache.commons.exec.CommandLine;
import org.apache.commons.exec.DefaultExecutor;
import org.apache.commons.exec.ExecuteException;

public class CallLogic {
	static int iExitValue;
    static String sCommandString;
	public static void shellScriptExecution(String command) 
	{
        sCommandString = command;
        CommandLine oCmdLine = CommandLine.parse(sCommandString);
        DefaultExecutor oDefaultExecutor = new DefaultExecutor();
        oDefaultExecutor.setExitValue(0);
        try {
            iExitValue = oDefaultExecutor.execute(oCmdLine);
        } catch (ExecuteException e) {
            System.err.println("Execution failed.");
            e.printStackTrace();
        } catch (IOException e) {
            System.err.println("permission denied.");
            e.printStackTrace();
        }
    }
	
	public static void batFileExecution() throws IOException, InterruptedException 
	{
		ProcessBuilder pb = new ProcessBuilder("cmd", "/c", "batchTest.bat");
		File dir = new File("C:/Users/Prashant Chaudhary/Desktop");
		pb.directory(dir);
		Process p = pb.start();
		p.waitFor();
	}
	
	public static void executionThroughTerminal() throws IOException 
	{
		Runtime.getRuntime().exec("cmd /c start cmd.exe /K \"dir && ping localhost\""); //for running window ping command
		//Runtime.getRuntime().exec("/bin/bash -c your_command");//for mac terminal
		
		String[] args = new String[] {"/bin/bash", "-c", "your_command", "with", "args"};
		Process proc = new ProcessBuilder(args).start();
	}
}
